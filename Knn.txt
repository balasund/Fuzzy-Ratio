KNN - K Nearest Neighbor Algorithm
--------------------------------------

import matplotlib.pyplot as plt
x = [4, 5, 10, 4, 3, 11, 14 , 8, 10, 12]
y = [21, 19, 24, 17, 16, 25, 24, 22, 21, 21]
classes = [0, 0, 1, 0, 0, 1, 1, 0, 1, 1]
plt.scatter(x, y, c=classes)
plt.show()
from sklearn.neighbors import KNeighborsClassifier
data = list(zip(x, y))
knn = KNeighborsClassifier(n_neighbors=1)
knn.fit(data, classes)
new_x = 10
new_y = 24
new_point = [(new_x, new_y)]
prediction = knn.predict(new_point)
plt.scatter(x + [new_x], y + [new_y], c=classes + [prediction[0]])
plt.text(x=new_x, y=new_y, s=f"new point, class: {prediction[0]}")
plt.show()
print(prediction)


--------------------------------


x = [1,  2,  3,  4,   5,  6,  7 ,  8,  9,   10]
y = [10, 20, 30, 40, 50, 60, 70 , 80, 90, 100]
c = [0,  0,  0,  0,  0,  1,  1,   1,  1,  1]
from sklearn.neighbors import KNeighborsClassifier
data = list(zip(x, y))
knn = KNeighborsClassifier(n_neighbors=1)
knn.fit(data, c)
a=float(input("enter x value"))
b=float(input("enter y value"))
new_x = a
new_y = b
new_point = [(new_x, new_y)]
prediction = knn.predict(new_point)
print("Predited class is",prediction)



